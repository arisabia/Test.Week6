// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestWeek6.Context;

namespace TestWeek6.Migrations
{
    [DbContext(typeof(InsurancePackageContext))]
    [Migration("20210625094135_IntialMigration")]
    partial class IntialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestWeek6.Models.Customer", b =>
                {
                    b.Property<string>("CF")
                        .HasMaxLength(16)
                        .HasColumnType("nchar(16)")
                        .IsFixedLength(true);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CF");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("TestWeek6.Models.Insurance", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerCF")
                        .HasColumnType("nchar(16)");

                    b.Property<DateTime>("InitialContractDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("InsurenceCoverage")
                        .HasColumnType("real");

                    b.Property<float>("MonthlyPayment")
                        .HasColumnType("real");

                    b.Property<string>("isurance_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Number");

                    b.HasIndex("CustomerCF");

                    b.ToTable("Insurance");

                    b.HasDiscriminator<string>("isurance_type").HasValue("Insurance");
                });

            modelBuilder.Entity("TestWeek6.Models.CarInsurance", b =>
                {
                    b.HasBaseType("TestWeek6.Models.Insurance");

                    b.Property<int>("EngineCapacity")
                        .HasColumnType("int");

                    b.Property<string>("LicensePlates")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("car");
                });

            modelBuilder.Entity("TestWeek6.Models.LifeInsurance", b =>
                {
                    b.HasBaseType("TestWeek6.Models.Insurance");

                    b.Property<int>("CustomerAge")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("life");
                });

            modelBuilder.Entity("TestWeek6.Models.TheftPolicy", b =>
                {
                    b.HasBaseType("TestWeek6.Models.Insurance");

                    b.Property<int>("CoveragePercentage")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("theft");
                });

            modelBuilder.Entity("TestWeek6.Models.Insurance", b =>
                {
                    b.HasOne("TestWeek6.Models.Customer", "Customer")
                        .WithMany("Insurances")
                        .HasForeignKey("CustomerCF");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("TestWeek6.Models.Customer", b =>
                {
                    b.Navigation("Insurances");
                });
#pragma warning restore 612, 618
        }
    }
}
